import { Request, Response } from "express";
import { StatusCodes } from "http-status-codes";
import BadRequestError from "../errors/bad-request";
import ConflictError from "../errors/conflict";
import NotFoundError from "../errors/not-found";

import {
  models,
  insertResource,
  findResourceById,
  findFilterAllResources,
  deleteFilterResource,
  findFilterResourceByProperty,
  updateFilterResource,
} from "../services/mongoServices";

// @desc create a baseResource
// @route POST /api/v1/baseResources
// @access Private
// @fields: body {fieldOne:[string] , fieldTwo:[string], fieldThree:[string]}
const createBaseResource = async ({ body }: Request, res: Response) => {  
  /* destructure the fields */

  // code
  res.sendStatus(StatusCodes.OK);
};

// @desc get all the BaseResources
// @route GET /api/v1/BaseResources
// @access Private
// @fields: body {fieldOne:[string]}
const getBaseResources = async ({ body }: Request, res: Response) => {  
  /* destructure the fields */

  // code
  res.sendStatus(StatusCodes.OK);
};

// @desc get the BaseResource by id
// @route GET /api/v1/BaseResources/:id
// @access Private
// @fields: params: {id:[string]},  body: {fieldOne:[string]}
const getBaseResource = async ({ params, body }: Request, res: Response) => {  
  /* destructure the fields */

  // code
  res.sendStatus(StatusCodes.OK);
};

// @desc update a BaseResource
// @route PUT /api/v1/BaseResources/:id
// @access Private
// @fields: params: {id:[string]},  body {fieldOne:[string] , fieldTwo:[string], fieldThree:[string]}
const updateBaseResource = async ({ params, body }: Request, res: Response) => {
  /* destructure the fields */

  //code
  res.sendStatus(StatusCodes.OK);
};

// @desc delete a BaseResource
// @route DELETE /api/v1/BaseResources/:id
// @access Private
// @fields: params: {id:[string]},  body: {fieldOne:[string]}
const deleteBaseResource = async ({ params, body }: Request, res: Response) => {
  /* models */
  // const baseResource = "baseResource";
  /* destructure the fields */

  // code
  res.sendStatus(StatusCodes.OK);
};

export {
  createBaseResource,
  getBaseResources,
  getBaseResource,
  updateBaseResource,
  deleteBaseResource,
};
