Administrative:

// Todo --> for new projects setup eslint config for unused variables
// Todo -->

for later:

- 

Back end:

// Todo --> add teacher_coordinator associative table, to decouple the coordinator from the teacher and to have more than one coordinator for each teacher
    --> update UML diagram
    --> update types
// Make all singular, controllers and validators


for later:

- type the entities params when need it instead of comments with params types
- check if the empty just toBeCalled are necessary since you already have toBeCalledWith that might replace it
- simplify the error messages, do not send the entire message in production, make the more user-friendly
- add success confirmation boolean in the response message
- add logger

- authentication JWT
- authorization - role base
    https://youtu.be/0NiyW9XINRA?feature=shared
- add checks for the school, make sure the field actually belongs to the school  - school middleware
- make sure resources belong to the user/coordinator's school - school middleware
- not allow user/coordinator to update/delete other user/coordinator's info - coordinator middleware


- add csrf attack protection features:
    https://www.youtube.com/watch?v=CXSE89JGnek&ab_channel=AntonioSarosi
    https://www.youtube.com/watch?v=C9dvkIndTLA&t=1s&ab_channel=4tomik


- important: try to update packages, specially express validator,
- continue checking sanitization and overall security of the apis


Front End

// Todo --> if user is UPDATED as inactive being soft deleted, inform the user that the user functions must be passed onto a new teacher
// Todo --> if the level changes in the group, inform the user that the user must change it in the session
// Todo --> Create the user first then create the teacher, do that on a kind of multi-step form, alternatively, you can also use promise.all to do it in one step


for later:

- 